/* Описание:
Представьте, что у вас есть электронная библиотека, содержащая информацию о книгах. Каждая книга имеет уникальный номер ISBN, название и год издания.

Вам нужно написать программу, которая сортирует все книги по году издания в порядке возрастания. 
Если две или более книг были изданы в один и тот же год, сортируйте их по названию в алфавитном порядке. 
Используйте сортировку слиянием для решения этой задачи.

 
Формат входных данных
Первая строка ввода содержит одно целое число n (1≤n≤10^5)— количество книг в библиотеке.

Следующие n строк содержат информацию о книгах:

Уникальный номер ISBN (строка из 10 символов)
Название книги (строка длиной до 100 символов)
Год издания (целое число от 1900 до 2100)
Формат выходных данных
Выведите информацию о книгах после сортировки в том же формате, что и на входе.

Пример 1
Входные данные

3
1234567890 "Война и мир" 1869
9876543210 "1984" 1949
1111111111 "Сказка о рыбаке и рыбке" 1833
Выходные данные

1111111111 "Сказка о рыбаке и рыбке" 1833
1234567890 "Война и мир" 1869
9876543210 "1984" 1949*/

#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

// Структура для хранения информации о книге
struct Book {
    string ISBN;
    string title;
    int year;
};

// Функция для сравнения двух книг
bool compareBooks(const Book& a, const Book& b) {
    if (a.year == b.year) {
        return a.title < b.title;  // Сравнение по названию при одинаковом годе
    }
    return a.year < b.year;  // Сравнение по году издания
}

// Функция для вывода книги
void printBook(const Book& book) {
    cout << book.ISBN << " \"" << book.title << "\" " << book.year << endl;
}

int main() {
    int n;
    cin >> n;  // Чтение количества книг
    
    vector<Book> books(n);
    
    // Чтение данных о книгах
    for (int i = 0; i < n; ++i) {
        cin >> books[i].ISBN;
        cin.ignore();  // Пропуск пробела перед вводом названия
        getline(cin, books[i].title, '"');  // Игнорируем первую кавычку
        getline(cin, books[i].title, '"');  // Читаем название до следующей кавычки
        cin >> books[i].year;
    }
    
    // Сортировка книг с использованием стандартной функции sort и нашего компаратора
    sort(books.begin(), books.end(), compareBooks);
    
    // Вывод отсортированных книг
    for (const Book& book : books) {
        printBook(book);
    }

    return 0;
}